# Called by stages.yml which is generated by generate_stages.py
# This workflow builds and publishes Docker images to GitHub Container Registry and Docker Hub.
on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      image_name:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

env:
  REPO_NAME: ${{ github.repository }}

jobs:
  img:
    runs-on: ${{ matrix.runner }}
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            platform: linux/amd64
            arch: amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64
            arch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # setup buildx is needed to use cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Write date file
        run: |
          date -Idate > ${{ inputs.path }}/date.txt
        shell: bash

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.path }}
          platforms: ${{ matrix.platform }}
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/${{ inputs.image_name }}:latest-${{ matrix.arch }}
            ${{ github.repository_owner }}/${{ inputs.image_name }}:latest-${{ matrix.arch }}
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_NAME }}/${{ inputs.image_name }}:latest-${{ matrix.arch }}
          cache-to: type=inline
          build-args: |
            TARGETARCH=${{ matrix.arch }}
            TARGETPLATFORM=${{ matrix.platform }}

      # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)."
      # We can use that to get from the image to the source code that was used to build it.
      - name: Generate artifact attestation for GitHub Container Registry
        uses: actions/attest-build-provenance@v1
        # Only on main branch
        if: github.ref == 'refs/heads/main'
        with:
          subject-name: ghcr.io/${{ env.REPO_NAME }}/${{ inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for Docker Hub
        uses: actions/attest-build-provenance@v1
        # Only on main branch
        if: github.ref == 'refs/heads/main'
        with:
          subject-name: docker.io/${{ github.repository_owner }}/${{ inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  manifest:
    needs: img
    runs-on: ubuntu-24.04
    # Only on main branch
    if: github.ref == 'refs/heads/main' or github.ref == 'refs/heads/arm'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest for GitHub Container Registry
        run: |
          docker buildx imagetools create -t ghcr.io/${{ env.REPO_NAME }}/${{ inputs.image_name }}:latest \
            ghcr.io/${{ env.REPO_NAME }}/${{ inputs.image_name }}:latest-amd64 \
            ghcr.io/${{ env.REPO_NAME }}/${{ inputs.image_name }}:latest-arm64

      - name: Create and push manifest for Docker Hub
        run: |
          docker buildx imagetools create -t ${{ github.repository_owner }}/${{ inputs.image_name }}:latest \
            ${{ github.repository_owner }}/${{ inputs.image_name }}:latest-amd64 \
            ${{ github.repository_owner }}/${{ inputs.image_name }}:latest-arm64
