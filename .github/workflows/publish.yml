on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

env:
  REPO_NAME: ${{ github.repository }}

jobs:
  img:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # setup buildx is needed to use cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Write date file
        run: |
          date -Idate > ${{ inputs.path }}/date.txt
        shell: bash

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.path }}
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/${{ replace(inputs.path, '/', '-') }}:latest
            ${{ github.repository_owner }}/${{ replace(inputs.path, '/', '-') }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_NAME }}/${{ replace(inputs.path, '/', '-') }}:latest
          cache-to: type=inline

      # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)."
      # We can use that to get from the image to the source code that was used to build it.
      - name: Generate artifact attestation for GitHub Container Registry
        uses: actions/attest-build-provenance@v1
        # Only on main branch
        if: github.ref == 'refs/heads/main'
        with:
          subject-name: ghcr.io/${{ env.REPO_NAME }}/${{ replace(inputs.path, '/', '-') }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for Docker Hub
        uses: actions/attest-build-provenance@v1
        # Only on main branch
        if: github.ref == 'refs/heads/main'
        with:
          subject-name: docker.io/${{ github.repository_owner }}/${{ replace(inputs.path, '/', '-') }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
